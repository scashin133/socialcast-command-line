#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'
require 'rest_client'
require 'crack'

program :version, File.read(File.join(File.dirname(__FILE__), '..', 'VERSION')).strip
program :description, 'command line interface to the socialcast api'

command :share do |c|
  c.syntax = 'socialcast share <message> [options]'
  c.summary = 'share a message'
  c.description = 'post a message into your socialcast stream'
  c.example 'Basic Post', 'socialcast share \'hey all\' -u emily@socialcast.com --domain demo.socialcast.com'
  c.example 'From stdin', 'echo \'from stdin\' | socialcast share -u emily@socialcast.com --domain demo.socialcast.com'
  c.option '-u', '--user STRING', String, 'Socialcast account username'
  c.option '-p', '--password STRING', String, 'Socialcast account password'
  c.option '--domain STRING', String, 'Socialcast community domain'
  c.option '-v', '--verbose', 'Show extra logging output'
  c.option '--attachments ATTACHMENTS', Array, 'Pass in attachments to be uploaded'
  c.action do |args, options|
    message = if args.first
      args.first
    else
      $stdin.gets
    end

    options.user = ask('Socialcast username: ') unless options.user
    options.password = password unless options.password
    options.domain = ask('Socialcast domain: ') unless options.domain

    url = ['https://', options.domain, '/api/messages.json'].join
    say "Posting message to: #{url}" if options.verbose
    resource = RestClient::Resource.new url, :user => options.user, :password => options.password
    params = {:message => {:body => message}}
    if options.attachments
      if options.attachments.size == 1
        params[:message].merge!({:attachment => File.new(options.attachments.first)})
      else
        options.attachments.each do |attachment|
          
        end
      end
    end
    
    resource.post params do |response|
      if response.code == 201
        say "Message has been posted at: #{Crack::JSON.parse(response)['message']['permalink_url']}" if options.verbose
      else
        say "Message couldn't be posted: #{response.body}"
      end
    end
  end
end

